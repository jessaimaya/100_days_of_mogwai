use log::info;
use mogwai::prelude::*;
use mogwai::component::subscriber::Subscriber;
use web_sys::{HtmlElement, Element};

use crate::router;
use mogwai::prelude::EventTargetType::Document;

#[derive(Clone)]
pub enum NavModel {
    ShowHide,
}
#[derive(Clone)]
pub enum NavView {
    ShowHide(bool),
}
pub struct Nav {
    pub is_showing: bool,
}

impl Component for Nav {
    type ModelMsg = NavModel;
    type ViewMsg = NavView;
    type DomNode = HtmlElement;

    fn update(&mut self, msg: &Self::ModelMsg, tx_view: &Transmitter<Self::ViewMsg>, sub: &Subscriber<Self::ModelMsg>) {
        match msg {
            NavModel::ShowHide => {
                self.is_showing = !self.is_showing;
                tx_view.send(&NavView::ShowHide(self.is_showing));
            }
        }
    }

    fn view(&self, tx: &Transmitter<Self::ModelMsg>, rx: &Receiver<Self::ViewMsg>) -> ViewBuilder<Self::DomNode> {
        let default_class = "cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left";
        let menu_class = rx.branch_map(move |msg| {
            let body = web_sys::Element::from(body());
            let class = "cbp-spmenu-push-toright";
            match msg {
               NavView::ShowHide(flag) => match *flag {
                   true => {
                       body.class_list().add_1(class);
                       format!("{} {}", default_class, "cbp-spmenu-open")
                   },
                   false => {
                       body.class_list().remove_1(class);
                       format!("{}", default_class)
                   }
               }
           }
        });
        builder!(
        <div>
                <button
                    style=vec![
                        "position: fixed;",
                        "z-index: 1;",
                        "right: 0;",
                        "top: 0;",
                    ].concat()
                    on:click = tx.contra_map(|_| NavModel::ShowHide )>
                    "Menu"
                </button>
                <nav
                    class=(default_class, menu_class)
                    id="cbp-spmenu-s1"
                >
                    <a href=String::from(router::Route::Home)>"Home"</a>
                </nav>
        </div>
        )
    }
}